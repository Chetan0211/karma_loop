c
result.errors
result['contract.default']
c
result['contract.default']
c
options[:skip_rescue_key]
options.skip_rescue_key
options
params[:skip_rescue_key]
params
options[:skip_secure_key]
c
n
c
options[:reset_password_token]
params
c
Devise.token_generator.digest(u)
Devise.token_generator.digest(u,:reset_password_token, user_params[:reset_password_token])
Devise.token_generator.digest(u, , :reset_password_token, user_params[:reset_password_token])
u
u = User.find_by(reset_password_token: user_params[:reset_password_token])
user_params[:reset_password_token]
Devise.token_generator.digest(self, :reset_password_token, user_params[:reset_password_token])
reset_password_token
c
user_params[:reset_password_token]
n
user_params[:reset_password_token]
params
params[:reset_password_token]
c
params[:reset_password_token]
c
result['contract.default'].errors.full_messages.join(", ")
result['contract.default'].errors
result.errors
result.error
result
c
options["model"]
n
c
params[:skip_secure_key]
c
User.find_by(reset_password_token: params[:reset_password_token])
params[:reset_password_token]
User.with_reset_password_token(params[:reset_password_token])
params[:reset_password_token]
params
parmas
c
params
c
params
c
@user
c
@user
c
@user.email
@user.username
n
User.with_reset_password_token(params[:reset_password_token])
c
User.find_by(reset_password_token: params[:reset_password_token])
params[:reset_password_token]
c
result
c
request.format
response
response.type
response
respond
result
n
c
n
c
resource.encrypted_key
resource
